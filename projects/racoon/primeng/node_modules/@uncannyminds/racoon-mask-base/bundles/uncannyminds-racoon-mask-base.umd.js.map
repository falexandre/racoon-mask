{"version":3,"file":"uncannyminds-racoon-mask-base.umd.js.map","sources":["ng://@uncannyminds/racoon-mask-base/lib/masking-base/masking-base.ts"],"sourcesContent":["import { ElementRef } from \"@angular/core\";\r\n\r\nexport class MaskingBase {\r\n    private oldLength: number;\r\n\r\n    public _slotChar = \"_\";\r\n\r\n    public _showPlaceholder = false;\r\n\r\n    public _mask = \"\";\r\n\r\n    public _input: ElementRef;\r\n\r\n    private oldValue: string;\r\n\r\n    private caretPos: number;\r\n\r\n    public value: string;\r\n\r\n    private static isNumeric(s: string) {\r\n        if (s === \" \") {\r\n            return false;\r\n        }\r\n        return !isNaN(Number(s));\r\n    }\r\n\r\n    private static isAlpha(s: string) {\r\n        return s.match(/^[a-z]+$/i) !== null;\r\n    }\r\n\r\n\r\n    public checkValue() {\r\n        this.oldValue = this.value;\r\n        this.value = this._input.nativeElement.value;\r\n        if (!this.value) {\r\n            return;\r\n        }\r\n        this.maskValue();\r\n    }\r\n\r\n\r\n    public maskValue() {\r\n        let maskedValue = \"\";\r\n        let dif = 0;\r\n        let foundPlaceholder = false;\r\n\r\n        for (let i = 0; i < this._mask.length && this.value.length !== i; i++) {\r\n            const maskChar = this._mask.charAt(i + dif);\r\n            const valueChar = this.value.charAt(i);\r\n            if (this._showPlaceholder && valueChar === this._slotChar) {\r\n                if (foundPlaceholder) {\r\n                    break;\r\n                }\r\n                foundPlaceholder = true;\r\n            }\r\n            if (!MaskingBase.isAlpha(valueChar)\r\n                && !MaskingBase.isNumeric(valueChar)\r\n                && valueChar !== maskChar) {\r\n                this.value = this.value.substring(0, i) + this.value.substring(i + 1);\r\n                i--;\r\n            } else if (maskChar === \"9\") {\r\n                if (MaskingBase.isNumeric(valueChar)) {\r\n                    maskedValue += valueChar;\r\n                } else {\r\n                    this.value = this.value.substring(0, i) + this.value.substring(i + 1);\r\n                    i--;\r\n                }\r\n            } else if (maskChar === \"A\") {\r\n                if (MaskingBase.isAlpha(this.value.charAt(i))) {\r\n                    maskedValue += valueChar;\r\n                } else {\r\n                    this.value = this.value.substring(0, i) + this.value.substring(i + 1);\r\n                    i--;\r\n                }\r\n            } else if (maskChar !== valueChar && maskedValue.charAt(i + dif) !== maskChar) {\r\n                maskedValue += maskChar;\r\n                dif++;\r\n                i--;\r\n            } else {\r\n                maskedValue += maskChar;\r\n            }\r\n        }\r\n        this.oldLength = maskedValue.length;\r\n        if (this._showPlaceholder) {\r\n            maskedValue = this.fillWithPlaceholder(maskedValue);\r\n            this.oldValue = this.fillWithPlaceholder(this.oldValue);\r\n        }\r\n\r\n        this.caretPos = this.getUpdatedCaretPos(maskedValue);\r\n        this.value = maskedValue;\r\n        this.updateInput();\r\n    }\r\n\r\n    public updateInput() {\r\n        this._input.nativeElement.value = this.value;\r\n        this._input.nativeElement.selectionStart = this.caretPos;\r\n        this._input.nativeElement.selectionEnd = this.caretPos;\r\n    }\r\n\r\n    private getUpdatedCaretPos(maskedValue: string) {\r\n        let caretPos = this.getCaretPos();\r\n        if (caretPos === this._input.nativeElement.value.length || caretPos === this.oldLength) {\r\n            caretPos = this.oldLength;\r\n        } else if (this.oldValue !== maskedValue) {\r\n            while (caretPos < this.value.length &&\r\n            this._mask.charAt(caretPos) !== \"9\" &&\r\n            this._mask.charAt(caretPos) !== \"A\") {\r\n                caretPos++;\r\n            }\r\n        } else {\r\n            caretPos--;\r\n        }\r\n        return caretPos;\r\n    }\r\n\r\n    private fillWithPlaceholder(value: string): string {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        let mask = this._mask.replace(/[9A]/g, this._slotChar);\r\n        mask = mask.substring(value.length, mask.length);\r\n        value = value + mask;\r\n        return value;\r\n    }\r\n\r\n    public getCaretPos() {\r\n        return this._input.nativeElement.selectionStart;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}
